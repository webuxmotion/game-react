{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect}from\"react\";import{gameMachine}from\"../../machines/gameMachine\";import{useMachine}from\"@xstate/react\";import{HomeScreen}from\"../HomeScreen\";import{GameOverScreen}from\"../GameOverScreen\";import{GameCompleteScreen}from\"../GameCompleteScreen\";import level1BackgroundPng from\"../../images/level1Background.png\";import level2BackgroundPng from\"../../images/level2Background.png\";import level3BackgroundPng from\"../../images/level3Background.png\";import{LevelBackgroundImage}from\"../LevelBackgroundImage\";import{Grid}from\"../Grid\";import{Player}from\"../Player\";import{Treasure}from\"../Treasure\";import{Monster}from\"../Monster\";import{ScreenTransition}from\"../ScreenTransition\";export var Game=function Game(_ref){var fastForwardEvents=_ref.fastForwardEvents;var _useMachine=useMachine(gameMachine),_useMachine2=_slicedToArray(_useMachine,2),state=_useMachine2[0],send=_useMachine2[1];var _state$children=state.children,monsterActor=_state$children.monsterActor,playerActor=_state$children.playerActor;useEffect(function(){if(fastForwardEvents){fastForwardEvents.forEach(function(event){send(event);});}},[fastForwardEvents,send]);var Screen=function Screen(){if(state.matches(\"home\")){return React.createElement(HomeScreen,{onStartButtonClick:function onStartButtonClick(){return send(\"START_BUTTON_CLICKED\");}});}if(state.matches(\"playing\")){if(state.matches(\"playing.level1\")){return React.createElement(React.Fragment,null,React.createElement(LevelBackgroundImage,{src:level1BackgroundPng,alt:\"Dungeon room\"}),React.createElement(Grid,null,playerActor&&React.createElement(Player,{actor:playerActor})));}if(state.matches(\"playing.level2\")){return React.createElement(React.Fragment,null,React.createElement(LevelBackgroundImage,{src:level2BackgroundPng,alt:\"Dungeon room\"}),React.createElement(Grid,null,playerActor&&React.createElement(Player,{actor:playerActor}),monsterActor&&React.createElement(Monster,{actor:monsterActor})));}if(state.matches(\"playing.level3\")){return React.createElement(React.Fragment,null,React.createElement(LevelBackgroundImage,{src:level3BackgroundPng,alt:\"Dungeon room\"}),React.createElement(Grid,null,playerActor&&React.createElement(Player,{actor:playerActor}),React.createElement(Treasure,null)));}}if(state.matches(\"gameOver\")){return React.createElement(GameOverScreen,{onRestartButtonClick:function onRestartButtonClick(){return send(\"RESTART_BUTTON_CLICKED\");}});}if(state.matches(\"gameComplete\")){return React.createElement(GameCompleteScreen,{onGoHomeButtonClick:function onGoHomeButtonClick(){return send(\"HOME_BUTTON_CLICKED\");}});}throw Error(\"Unknown game state: \"+state.value);};return React.createElement(ScreenTransition,{key:JSON.stringify(state.value)},React.createElement(Screen,null));};","map":{"version":3,"sources":["/Users/andriipereverziev/Projects/game-react/src/components/Game/index.tsx"],"names":["React","useEffect","gameMachine","useMachine","HomeScreen","GameOverScreen","GameCompleteScreen","level1BackgroundPng","level2BackgroundPng","level3BackgroundPng","LevelBackgroundImage","Grid","Player","Treasure","Monster","ScreenTransition","Game","fastForwardEvents","state","send","children","monsterActor","playerActor","forEach","event","Screen","matches","Error","value","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { gameMachine } from \"../../machines/gameMachine\";\nimport { useMachine } from \"@xstate/react\";\nimport { HomeScreen } from \"../HomeScreen\";\nimport { GameOverScreen } from \"../GameOverScreen\";\nimport { GameCompleteScreen } from \"../GameCompleteScreen\";\nimport { GameEventType } from \"../../machines/gameMachine/types\";\nimport level1BackgroundPng from \"../../images/level1Background.png\";\nimport level2BackgroundPng from \"../../images/level2Background.png\";\nimport level3BackgroundPng from \"../../images/level3Background.png\";\nimport { LevelBackgroundImage } from \"../LevelBackgroundImage\";\nimport { Grid } from \"../Grid\";\nimport { Player } from \"../Player\";\nimport { Treasure } from \"../Treasure\";\nimport { Monster } from \"../Monster\";\nimport { MonsterActorType } from \"../../machines/monsterMachine/types\";\nimport { ScreenTransition } from \"../ScreenTransition\";\n\ninterface PropsType {\n    fastForwardEvents?: GameEventType[];\n}\n\nexport const Game = ({ fastForwardEvents }: PropsType) => {\n    const [state, send] = useMachine(gameMachine);\n    const { monsterActor, playerActor } = state.children;\n\n    useEffect(() => {\n        // note: batching events doesn't work at time of writing\n        if (fastForwardEvents) {\n            fastForwardEvents.forEach((event: GameEventType) => {\n                send(event);\n            });\n        }\n    }, [fastForwardEvents, send]);\n\n    const Screen = () => {\n        if (state.matches(\"home\")) {\n            return (\n                <HomeScreen\n                    onStartButtonClick={() => send(\"START_BUTTON_CLICKED\")}\n                />\n            );\n        }\n\n        if (state.matches(\"playing\")) {\n            if (state.matches(\"playing.level1\")) {\n                return (\n                    <>\n                        <LevelBackgroundImage\n                            src={level1BackgroundPng}\n                            alt=\"Dungeon room\"\n                        />\n                        <Grid>\n                            {playerActor && <Player actor={playerActor} />}\n                        </Grid>\n                    </>\n                );\n            }\n\n            if (state.matches(\"playing.level2\")) {\n                return (\n                    <>\n                        <LevelBackgroundImage\n                            src={level2BackgroundPng}\n                            alt=\"Dungeon room\"\n                        />\n                        <Grid>\n                            {playerActor && <Player actor={playerActor} />}\n                            {monsterActor && (\n                                <Monster\n                                    actor={monsterActor as MonsterActorType}\n                                />\n                            )}\n                        </Grid>\n                    </>\n                );\n            }\n\n            if (state.matches(\"playing.level3\")) {\n                return (\n                    <>\n                        <LevelBackgroundImage\n                            src={level3BackgroundPng}\n                            alt=\"Dungeon room\"\n                        />\n                        <Grid>\n                            {playerActor && <Player actor={playerActor} />}\n                            <Treasure />\n                        </Grid>\n                    </>\n                );\n            }\n        }\n\n        if (state.matches(\"gameOver\")) {\n            return (\n                <GameOverScreen\n                    onRestartButtonClick={() => send(\"RESTART_BUTTON_CLICKED\")}\n                />\n            );\n        }\n\n        if (state.matches(\"gameComplete\")) {\n            return (\n                <GameCompleteScreen\n                    onGoHomeButtonClick={() => send(\"HOME_BUTTON_CLICKED\")}\n                />\n            );\n        }\n\n        throw Error(`Unknown game state: ${state.value}`);\n    };\n\n    return (\n        <ScreenTransition key={JSON.stringify(state.value)}>\n            <Screen />\n        </ScreenTransition>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}