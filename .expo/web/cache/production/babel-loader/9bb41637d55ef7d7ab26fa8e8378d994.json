{"ast":null,"code":"import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";var _templateObject;import styled from\"styled-components\";import{GRID_SQUARE_SIZE}from\"../../constants\";import{space}from\"../../styles/space\";export var ImageSizeType;(function(ImageSizeType){ImageSizeType[\"Small\"]=\"Small\";ImageSizeType[\"Medium\"]=\"Medium\";ImageSizeType[\"Large\"]=\"Large\";})(ImageSizeType||(ImageSizeType={}));var getDimension=function getDimension(size){if(size===ImageSizeType.Large){return space(20);}if(size===ImageSizeType.Small){return space(10);}return GRID_SQUARE_SIZE+\"px\";};export var Image=styled.img(_templateObject||(_templateObject=_taggedTemplateLiteralLoose([\"\\n  width: \",\";\\n  height: \",\";\\n  object-fit: contain;\\n\"])),function(props){return getDimension(props.size);},function(props){return getDimension(props.size);});","map":{"version":3,"sources":["/Users/andriipereverziev/Projects/game-react/src/components/Image/index.tsx"],"names":["styled","GRID_SQUARE_SIZE","space","ImageSizeType","getDimension","size","Large","Small","Image","img","props"],"mappings":"+GAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,uBACA,OAASC,KAAT,0BAEA,UAAYC,CAAAA,aAAZ,C,UAAYA,a,EAAAA,a,kBAAAA,a,oBAAAA,a,qBAAAA,a,GAAAA,a,MAMZ,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAA0B,CAC7C,GAAIA,IAAI,GAAKF,aAAa,CAACG,KAA3B,CAAkC,CAChC,MAAOJ,CAAAA,KAAK,CAAC,EAAD,CAAZ,CACD,CAED,GAAIG,IAAI,GAAKF,aAAa,CAACI,KAA3B,CAAkC,CAChC,MAAOL,CAAAA,KAAK,CAAC,EAAD,CAAZ,CACD,CAED,MAAUD,CAAAA,gBAAV,MACD,CAVD,CAgBA,MAAO,IAAMO,CAAAA,KAAK,CAAGR,MAAM,CAACS,GAAV,+HACP,SAAAC,KAAK,QAAIN,CAAAA,YAAY,CAACM,KAAK,CAACL,IAAP,CAAhB,EADE,CAEN,SAAAK,KAAK,QAAIN,CAAAA,YAAY,CAACM,KAAK,CAACL,IAAP,CAAhB,EAFC,CAAX","sourcesContent":["import styled from \"styled-components\";\nimport { GRID_SQUARE_SIZE } from \"../../constants\";\nimport { space } from \"../../styles/space\";\n\nexport enum ImageSizeType {\n  Small = \"Small\",\n  Medium = \"Medium\",\n  Large = \"Large\"\n}\n\nconst getDimension = (size?: ImageSizeType) => {\n  if (size === ImageSizeType.Large) {\n    return space(20);\n  }\n\n  if (size === ImageSizeType.Small) {\n    return space(10);\n  }\n\n  return `${GRID_SQUARE_SIZE}px`;\n}\n\ninterface PropsType {\n  size?: ImageSizeType\n}\n\nexport const Image = styled.img<PropsType>`\n  width: ${props => getDimension(props.size)};\n  height: ${props => getDimension(props.size)};\n  object-fit: contain;\n`;"]},"metadata":{},"sourceType":"module"}