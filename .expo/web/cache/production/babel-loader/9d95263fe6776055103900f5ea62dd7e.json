{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";var _templateObject,_templateObject2;import React from\"react\";import{useActor}from\"@xstate/react\";import thiefGif from\"../../images/thief.gif\";import{Image}from\"../Image\";import styled from\"styled-components\";import{coordsToPosition}from\"../../util/coordsToPosition\";import{usePlayerControls}from\"../../hooks/usePlayerControls\";import{DirectionType}from\"../../types\";import{Health}from\"../Health\";import{space}from\"../../styles/space\";var HealthLayout=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteralLoose([\"\\n    position: absolute;\\n    top: -\",\";\\n    left: -\",\";\\n\\n    display: flex;\\n\"])),space(30),space(2));var ImageLayout=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose([\"\\n    position: absolute;\\n\\n    display: flex;\\n\"])));export var Player=function Player(_ref){var actor=_ref.actor;var _useActor=useActor(actor),_useActor2=_slicedToArray(_useActor,2),state=_useActor2[0],send=_useActor2[1];var _state$context=state.context,coords=_state$context.coords,health=_state$context.health;var position=coordsToPosition(coords);usePlayerControls({handleArrowUp:function handleArrowUp(){return send({type:\"ARROW_BUTTON_CLICKED\",direction:DirectionType.Up});},handleArrowDown:function handleArrowDown(){return send({type:\"ARROW_BUTTON_CLICKED\",direction:DirectionType.Down});},handleArrowLeft:function handleArrowLeft(){return send({type:\"ARROW_BUTTON_CLICKED\",direction:DirectionType.Left});},handleArrowRight:function handleArrowRight(){return send({type:\"ARROW_BUTTON_CLICKED\",direction:DirectionType.Right});}});return React.createElement(React.Fragment,null,React.createElement(HealthLayout,null,React.createElement(Health,{health:health})),React.createElement(ImageLayout,{style:{top:position[1],left:position[0]}},React.createElement(Image,{src:thiefGif,alt:\"thief\"})));};","map":{"version":3,"sources":["/Users/andriipereverziev/Projects/game-react/src/components/Player/index.tsx"],"names":["React","useActor","thiefGif","Image","styled","coordsToPosition","usePlayerControls","DirectionType","Health","space","HealthLayout","div","ImageLayout","Player","actor","state","send","context","coords","health","position","handleArrowUp","type","direction","Up","handleArrowDown","Down","handleArrowLeft","Left","handleArrowRight","Right","top","left"],"mappings":"iMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,eAAzB,CACA,MAAOC,CAAAA,QAAP,8BAKA,OAASC,KAAT,gBACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,mCACA,OAASC,iBAAT,qCACA,OAASC,aAAT,mBACA,OAASC,MAAT,iBACA,OAASC,KAAT,0BAEA,GAAMC,CAAAA,YAAY,CAAGN,MAAM,CAACO,GAAV,wJAENF,KAAK,CAAC,EAAD,CAFC,CAGLA,KAAK,CAAC,CAAD,CAHA,CAAlB,CAQA,GAAMG,CAAAA,WAAW,CAAGR,MAAM,CAACO,GAAV,yHAAjB,CAUA,MAAO,IAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA0B,IAAvBC,CAAAA,KAAuB,MAAvBA,KAAuB,CAC5C,cAAkCb,QAAQ,CAACa,KAAD,CAA1C,wCAAOC,KAAP,eAAcC,IAAd,eACA,mBAA2BD,KAAK,CAACE,OAAjC,CAAQC,MAAR,gBAAQA,MAAR,CAAgBC,MAAhB,gBAAgBA,MAAhB,CACA,GAAMC,CAAAA,QAAQ,CAAGf,gBAAgB,CAACa,MAAD,CAAjC,CAEAZ,iBAAiB,CAAC,CACde,aAAa,CAAE,+BACXL,CAAAA,IAAI,CAAC,CACDM,IAAI,CAAE,sBADL,CAEDC,SAAS,CAAEhB,aAAa,CAACiB,EAFxB,CAAD,CADO,EADD,CAMdC,eAAe,CAAE,iCACbT,CAAAA,IAAI,CAAC,CACDM,IAAI,CAAE,sBADL,CAEDC,SAAS,CAAEhB,aAAa,CAACmB,IAFxB,CAAD,CADS,EANH,CAWdC,eAAe,CAAE,iCACbX,CAAAA,IAAI,CAAC,CACDM,IAAI,CAAE,sBADL,CAEDC,SAAS,CAAEhB,aAAa,CAACqB,IAFxB,CAAD,CADS,EAXH,CAgBdC,gBAAgB,CAAE,kCACdb,CAAAA,IAAI,CAAC,CACDM,IAAI,CAAE,sBADL,CAEDC,SAAS,CAAEhB,aAAa,CAACuB,KAFxB,CAAD,CADU,EAhBJ,CAAD,CAAjB,CAuBA,MACI,yCACI,oBAAC,YAAD,MACI,oBAAC,MAAD,EAAQ,MAAM,CAAEX,MAAhB,EADJ,CADJ,CAII,oBAAC,WAAD,EAAa,KAAK,CAAE,CAAEY,GAAG,CAAEX,QAAQ,CAAC,CAAD,CAAf,CAAoBY,IAAI,CAAEZ,QAAQ,CAAC,CAAD,CAAlC,CAApB,EACI,oBAAC,KAAD,EAAO,GAAG,CAAElB,QAAZ,CAAsB,GAAG,CAAC,OAA1B,EADJ,CAJJ,CADJ,CAUH,CAtCM","sourcesContent":["import React from \"react\";\nimport { useActor } from \"@xstate/react\";\nimport thiefGif from \"../../images/thief.gif\";\nimport {\n    ArrowButtonClickedType,\n    // PlayerActorType,\n} from \"../../machines/playerMachine/types\";\nimport { Image } from \"../Image\";\nimport styled from \"styled-components\";\nimport { coordsToPosition } from \"../../util/coordsToPosition\";\nimport { usePlayerControls } from \"../../hooks/usePlayerControls\";\nimport { DirectionType } from \"../../types\";\nimport { Health } from \"../Health\";\nimport { space } from \"../../styles/space\";\n\nconst HealthLayout = styled.div`\n    position: absolute;\n    top: -${space(30)};\n    left: -${space(2)};\n\n    display: flex;\n`;\n\nconst ImageLayout = styled.div`\n    position: absolute;\n\n    display: flex;\n`;\n\ninterface PropsType {\n    actor: any;\n}\n\nexport const Player = ({ actor }: PropsType) => {\n    const [state, send]: [any, any] = useActor(actor);\n    const { coords, health } = state.context;\n    const position = coordsToPosition(coords);\n\n    usePlayerControls({\n        handleArrowUp: () =>\n            send({\n                type: \"ARROW_BUTTON_CLICKED\",\n                direction: DirectionType.Up,\n            } as ArrowButtonClickedType),\n        handleArrowDown: () =>\n            send({\n                type: \"ARROW_BUTTON_CLICKED\",\n                direction: DirectionType.Down,\n            } as ArrowButtonClickedType),\n        handleArrowLeft: () =>\n            send({\n                type: \"ARROW_BUTTON_CLICKED\",\n                direction: DirectionType.Left,\n            } as ArrowButtonClickedType),\n        handleArrowRight: () =>\n            send({\n                type: \"ARROW_BUTTON_CLICKED\",\n                direction: DirectionType.Right,\n            } as ArrowButtonClickedType),\n    });\n\n    return (\n        <>\n            <HealthLayout>\n                <Health health={health} />\n            </HealthLayout>\n            <ImageLayout style={{ top: position[1], left: position[0] }}>\n                <Image src={thiefGif} alt=\"thief\" />\n            </ImageLayout>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}